worker_processes auto;

daemon off;

events {
  worker_connections 1024;
  use epoll;
  multi_accept on;
}

http {
  include mime.types;

  # Logging
  log_format proxy_log '[$time_local] $remote_addr - $remote_user "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';

  access_log /dev/stdout proxy_log;
  error_log  /dev/stdout warn;

  # Basic settings
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  server_tokens off;

  # Rate limiting
  limit_req_zone $binary_remote_addr zone=api:10m rate=1000r/s;
  limit_req_zone $binary_remote_addr zone=connect:10m rate=100r/s;

  # Connection limiting
  limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

  upstream backend {
    server 0.0.0.1:1; # dummy upstream for CONNECT method
  }

  server {
    listen 8080;
    server_name _;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "upgrade-insecure-requests" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Hide server info
    server_tokens off;

    # DNS resolver
    resolver 1.1.1.1 8.8.8.8 8.8.4.4 ipv6=off;

    # Rate limiting for all requests
    limit_req zone=api burst=200 nodelay;

    # Connection limiting
    limit_conn conn_limit_per_ip 100;

    # Proxy CONNECT method for HTTPS tunneling
    proxy_connect;
    proxy_connect_allow 443 80;
    proxy_connect_connect_timeout 30s;
    proxy_connect_read_timeout 30s;
    proxy_connect_send_timeout 30s;

    # Health check endpoint
    location /health {
      access_log off;
      return 200 "healthy\n";
      add_header Content-Type text/plain;
    }

    # Main proxy location for HTTP requests
    location / {
      # Rate limiting for regular HTTP requests
      limit_req zone=api burst=50 nodelay;

      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $server_host;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_set_header X-Original-URI $request_uri;

      # Remove potentially dangerous headers
      proxy_hide_header X-Powered-By;
      proxy_hide_header Server;

      # Proxy to destination
      proxy_pass $scheme://$host$request_uri;

      # Timeout settings
      proxy_connect_timeout 30s;
      proxy_send_timeout 30s;
      proxy_read_timeout 30s;

      # Buffer settings for better performance
      proxy_buffering on;
      proxy_buffer_size 4k;
      proxy_buffers 8 4k;
      proxy_busy_buffers_size 4k;
    }

    # Block access to internal services and potentially dangerous sites
    location ~* ^/(localhost|127\.0\.0\.1|10\.|192\.168\.|172\.(1[6-9]|2[0-9]|3[0-1])\.|0\.0\.0\.0) {
      return 403;
    }

    # Deny access to common exploit targets
    location ~* \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist|git|svn) {
      return 403;
    }

    # Deny access to sensitive files
    location ~* (wp-admin|administrator|\.env|composer\.json|package\.json|\.htaccess|\.htpasswd) {
      return 403;
    }
  }
}
